import { useState } from "react";
import WellParametersForm from "./components/WellParametersForm";
import TubeUploader from "./components/TubeUploader";
import CalculateMera from "./components/CalculateMera";

function App() {
  const [step, setStep] = useState(1);
  const [projectData, setProjectData] = useState({
    depth: '',
  });
  const [tubes, setTubes] = useState([]);
  const [patrubki, setPatrubki] = useState([]);
  const [equipment, setEquipment] = useState([]);

  const handleWellDataSubmit = (data) => {
    console.log("üìù –°–æ—Ö—Ä–∞–Ω—è–µ–º –ø–∞—Ä–∞–º–µ—Ç—Ä—ã —Å–∫–≤–∞–∂–∏–Ω—ã:", data);
    const formattedData = {
      ...data,
      depth: data.wellDepth || data.depth || '',
    };
    setProjectData((prev) => ({ ...prev, ...formattedData }));
    setStep(2);
  };

  const handleTubeData = (data) => {
    console.log("üü° –ó–∞–≥—Ä—É–∂–µ–Ω—ã —Ç—Ä—É–±—ã, –ø–∞—Ç—Ä—É–±–∫–∏ –∏ –æ–±–æ—Ä—É–¥–æ–≤–∞–Ω–∏–µ:", data);
    
    const tubesData = data.tubes?.data || [];
    const patrubkiData = data.patrubki?.data || [];
    const equipmentData = data.equipment || [];
    
    console.log(`üìä –û–±—Ä–∞–±–æ—Ç–∞–Ω–æ —Ç—Ä—É–±: ${tubesData.length}, –ø–∞—Ç—Ä—É–±–∫–æ–≤: ${patrubkiData.length}, –æ–±–æ—Ä—É–¥–æ–≤–∞–Ω–∏—è: ${equipmentData.length}`);
    
    setProjectData((prev) => ({ ...prev, ...data }));
    setTubes(tubesData);
    setPatrubki(patrubkiData);
    setEquipment(equipmentData);
    
    setStep(3);
  };

  const goToStep = (targetStep) => {
    if (targetStep >= 1 && targetStep <= 3) {
      setStep(targetStep);
    }
  };

  const handleClearStorage = () => {
    if (confirm('–í—ã —É–≤–µ—Ä–µ–Ω—ã, —á—Ç–æ —Ö–æ—Ç–∏—Ç–µ –æ—á–∏—Å—Ç–∏—Ç—å –≤—Å–µ –¥–∞–Ω–Ω—ã–µ –∏–∑ –ª–æ–∫–∞–ª—å–Ω–æ–≥–æ —Ö—Ä–∞–Ω–∏–ª–∏—â–∞? –≠—Ç–æ –¥–µ–π—Å—Ç–≤–∏–µ –Ω–µ–ª—å–∑—è –æ—Ç–º–µ–Ω–∏—Ç—å.')) {
      try {
        console.log('üßπ –ù–∞—á–∏–Ω–∞–µ–º –æ—á–∏—Å—Ç–∫—É —Ö—Ä–∞–Ω–∏–ª–∏—â–∞ –∏–∑ App...');
        
        // –Ø–≤–Ω–æ –ø–µ—Ä–µ—á–∏—Å–ª—è–µ–º –≤—Å–µ –∫–ª—é—á–∏, –∫–æ—Ç–æ—Ä—ã–µ –Ω—É–∂–Ω–æ —É–¥–∞–ª–∏—Ç—å
        const keysToRemove = [
          'calculationData',
          'tubeUploader',
          'wellParams',
          'tubeData',
          'patrubkiData',
          'equipmentData'
        ];
        
        // –£–¥–∞–ª—è–µ–º –∫–∞–∂–¥—ã–π –∫–ª—é—á –∏ –≤—ã–≤–æ–¥–∏–º –≤ –∫–æ–Ω—Å–æ–ª—å 
        keysToRemove.forEach(key => {
          const value = localStorage.getItem(key);
          console.log(`–£–¥–∞–ª—è–µ–º –∫–ª—é—á ${key}, —Ç–µ–∫—É—â–µ–µ –∑–Ω–∞—á–µ–Ω–∏–µ: ${value ? '—Å—É—â–µ—Å—Ç–≤—É–µ—Ç' : '–æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç'}`);
          localStorage.removeItem(key);
          console.log(`–ü—Ä–æ–≤–µ—Ä–∫–∞ –ø–æ—Å–ª–µ —É–¥–∞–ª–µ–Ω–∏—è ${key}: ${localStorage.getItem(key) ? '–æ—Å—Ç–∞–ª–æ—Å—å' : '—É–¥–∞–ª–µ–Ω–æ'}`);
        });
        
        // –ü–æ–ª–Ω–∞—è –æ—á–∏—Å—Ç–∫–∞ –≤—Å–µ–≥–æ —Ö—Ä–∞–Ω–∏–ª–∏—â–∞ –≤ –∫–∞—á–µ—Å—Ç–≤–µ —Ä–µ–∑–µ—Ä–≤–Ω–æ–≥–æ –≤–∞—Ä–∏–∞–Ω—Ç–∞
        console.log('–û—á–∏—â–∞–µ–º –≤—Å—ë —Ö—Ä–∞–Ω–∏–ª–∏—â–µ...');
        localStorage.clear();
        
        console.log('–ü—Ä–æ–≤–µ—Ä–∫–∞ –∫–ª—é—á–µ–π –ø–æ—Å–ª–µ –æ—á–∏—Å—Ç–∫–∏:');
        keysToRemove.forEach(key => {
          console.log(`${key}: ${localStorage.getItem(key) ? '–æ—Å—Ç–∞–ª–æ—Å—å' : '—É–¥–∞–ª–µ–Ω–æ'}`);
        });
        
        // –°–±—Ä–∞—Å—ã–≤–∞–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–∞
        setProjectData({ depth: '' });
        setTubes([]);
        setPatrubki([]);
        setEquipment([]);
        setStep(1);
        
        alert('–õ–æ–∫–∞–ª—å–Ω–æ–µ —Ö—Ä–∞–Ω–∏–ª–∏—â–µ –æ—á–∏—â–µ–Ω–æ. –°—Ç—Ä–∞–Ω–∏—Ü–∞ –±—É–¥–µ—Ç –ø–µ—Ä–µ–∑–∞–≥—Ä—É–∂–µ–Ω–∞.');
        
        // –ò—Å–ø–æ–ª—å–∑—É–µ–º –≤—Å—Ç—Ä–æ–µ–Ω–Ω—ã–π JavaScript –º–µ—Ç–æ–¥ –¥–ª—è –ø–æ–ª–Ω–æ–π –ø–µ—Ä–µ–∑–∞–≥—Ä—É–∑–∫–∏ —Å—Ç—Ä–∞–Ω–∏—Ü—ã
        console.log('üí• –ü–µ—Ä–µ–∑–∞–≥—Ä—É–∂–∞–µ–º —Å—Ç—Ä–∞–Ω–∏—Ü—É...');
        
        // –°–Ω–∞—á–∞–ª–∞ —É—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –Ω–µ–±–æ–ª—å—à—É—é –∑–∞–¥–µ—Ä–∂–∫—É
        setTimeout(() => {
          // –ü—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–æ –æ—á–∏—â–∞–µ–º –∫—ç—à –∏ –ø–µ—Ä–µ–∑–∞–≥—Ä—É–∂–∞–µ–º —Å—Ç—Ä–∞–Ω–∏—Ü—É
          window.location.href = window.location.href.split('?')[0] + '?nocache=' + new Date().getTime();
        }, 300);
      } catch (error) {
        console.error('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—á–∏—Å—Ç–∫–µ —Ö—Ä–∞–Ω–∏–ª–∏—â–∞:', error);
        alert('–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –æ—á–∏—Å—Ç–∫–µ —Ö—Ä–∞–Ω–∏–ª–∏—â–∞: ' + error.message);
      }
    }
  };

  return (
    <div className="min-h-screen bg-gray-100 p-6">
      <h1 className="text-2xl font-bold text-center text-blue-800 mb-6">
        üí° –†–∞—Å—á—ë—Ç –º–µ—Ä—ã —Å–ø—É—Å–∫–∞ —Ö–≤–æ—Å—Ç–æ–≤–∏–∫–∞
      </h1>

      {/* –ù–∞–≤–∏–≥–∞—Ü–∏—è –ø–æ —à–∞–≥–∞–º */}
      <div className="flex justify-between items-center mb-4">
        <div className="flex space-x-2">
          <button 
            onClick={() => goToStep(1)} 
            className={`px-3 py-1 rounded ${step === 1 ? 'bg-blue-600 text-white' : 'bg-gray-200'}`}
          >
            1. –°–∫–≤–∞–∂–∏–Ω–∞
          </button>
          <button 
            onClick={() => tubes.length > 0 && goToStep(2)} 
            className={`px-3 py-1 rounded ${step === 2 ? 'bg-blue-600 text-white' : tubes.length > 0 ? 'bg-gray-200' : 'bg-gray-100 text-gray-400 cursor-not-allowed'}`}
            disabled={tubes.length === 0}
          >
            2. –¢—Ä—É–±—ã
          </button>
          <button 
            onClick={() => equipment.length > 0 && goToStep(3)} 
            className={`px-3 py-1 rounded ${step === 3 ? 'bg-blue-600 text-white' : equipment.length > 0 ? 'bg-gray-200' : 'bg-gray-100 text-gray-400 cursor-not-allowed'}`}
            disabled={equipment.length === 0}
          >
            3. –†–∞—Å—á—ë—Ç
          </button>
        </div>
        <button 
          onClick={handleClearStorage} 
          className="px-3 py-1 bg-red-500 text-white rounded hover:bg-red-600 transition"
        >
          üóëÔ∏è –û—á–∏—Å—Ç–∏—Ç—å –¥–∞–Ω–Ω—ã–µ
        </button>
      </div>

      {/* –®–∞–≥ 1: –í–≤–æ–¥ –ø–∞—Ä–∞–º–µ—Ç—Ä–æ–≤ —Å–∫–≤–∞–∂–∏–Ω—ã */}
      {step === 1 && (
        <WellParametersForm 
          onNext={handleWellDataSubmit} 
          initialData={projectData} 
        />
      )}

      {/* –®–∞–≥ 2: –ó–∞–≥—Ä—É–∑–∫–∞ —Ç—Ä—É–±, –ø–∞—Ç—Ä—É–±–∫–æ–≤ –∏ –æ–±–æ—Ä—É–¥–æ–≤–∞–Ω–∏—è */}
      {step === 2 && (
        <TubeUploader
          wellParams={projectData}
          onNext={handleTubeData}
          onBack={() => goToStep(1)}
        />
      )}

      {/* –®–∞–≥ 3: –†–∞—Å—á–µ—Ç –º–µ—Ä—ã —Å–ø—É—Å–∫–∞ */}
      {step === 3 && (
        <CalculateMera
          tubes={tubes}
          patrubki={patrubki}
          equipment={equipment}
          wellParams={projectData}
          onBack={() => goToStep(2)}
        />
      )}

      {/* –û—Ç–ª–∞–¥–æ—á–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è - –º–æ–∂–Ω–æ —É–¥–∞–ª–∏—Ç—å –Ω–∞ –ø—Ä–æ–¥–∞–∫—à–µ–Ω–µ */}
      <div className="mt-8 text-xs text-gray-500 border-t pt-4">
        <details>
          <summary>–û—Ç–ª–∞–¥–æ—á–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è</summary>
          <div className="mt-2 p-2 bg-gray-100 rounded">
            <div>–¢–µ–∫—É—â–∏–π —à–∞–≥: {step}</div>
            <div>–ì–ª—É–±–∏–Ω–∞ —Å–∫–≤–∞–∂–∏–Ω—ã: {projectData.depth || "–ù–µ –∑–∞–¥–∞–Ω–∞"}</div>
            <div>–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ —Ç—Ä—É–±: {tubes?.length || 0}</div>
            <div>–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –ø–∞—Ç—Ä—É–±–∫–æ–≤: {patrubki?.length || 0}</div>
            <div>–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –æ–±–æ—Ä—É–¥–æ–≤–∞–Ω–∏—è: {equipment?.length || 0}</div>
            {equipment?.length > 0 && (
              <>
                <div>–ü–µ—Ä–≤—ã–π —ç–ª–µ–º–µ–Ω—Ç: {equipment[0]?.name || '–ù/–î'} (–∏–Ω—Ç: {equipment[0]?.interval || '–ù/–î'})</div>
                <div>–ü–æ—Å–ª–µ–¥–Ω–∏–π —ç–ª–µ–º–µ–Ω—Ç: {equipment[equipment.length-1]?.name || '–ù/–î'} (–∏–Ω—Ç: {equipment[equipment.length-1]?.interval || '–ù/–î'})</div>
              </>
            )}
          </div>
        </details>
      </div>
    </div>
  );
}

export default App;
