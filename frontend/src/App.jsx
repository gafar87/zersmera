import { useState } from "react";
import WellParametersForm from "./components/WellParametersForm";
import TubeUploader from "./components/TubeUploader";
import EquipmentUploader from "./components/EquipmentUploader";
import CalculateMera from "./components/CalculateMera";

function App() {
  const [step, setStep] = useState(1);
  const [projectData, setProjectData] = useState({
    depth: '',
    shoeDepth: '',
    hangerDepth: '',
    shoeTolerance: 3,
    hangerTolerance: 30
  });
  const [tubes, setTubes] = useState([]);
  const [patrubki, setPatrubki] = useState([]);
  const [equipment, setEquipment] = useState([]);

  const handleWellDataSubmit = (data) => {
    console.log("üìù –°–æ—Ö—Ä–∞–Ω—è–µ–º –ø–∞—Ä–∞–º–µ—Ç—Ä—ã —Å–∫–≤–∞–∂–∏–Ω—ã:", data);
    const formattedData = {
      ...data,
      depth: data.wellDepth || data.depth || '',
      shoeDepth: data.shoeDepth || '',
      hangerDepth: data.hangerDepth || ''
    };
    setProjectData((prev) => ({ ...prev, ...formattedData }));
    setStep(2);
  };

  const handleTubeData = (data) => {
    console.log("üü° –ó–∞–≥—Ä—É–∂–µ–Ω—ã —Ç—Ä—É–±—ã –∏ –ø–∞—Ç—Ä—É–±–∫–∏:", data);
    
    const tubesData = data.tubes?.data || [];
    const patrubkiData = data.patrubki?.data || [];
    
    console.log(`üìä –û–±—Ä–∞–±–æ—Ç–∞–Ω–æ —Ç—Ä—É–±: ${tubesData.length}, –ø–∞—Ç—Ä—É–±–∫–æ–≤: ${patrubkiData.length}`);
    
    setProjectData((prev) => ({ ...prev, ...data }));
    setTubes(tubesData);
    setPatrubki(patrubkiData);
    
    setStep(3);
  };

  const handleEquipmentData = (equipmentData) => {
    console.log("üîß –ó–∞–≥—Ä—É–∂–µ–Ω–æ –æ–±–æ—Ä—É–¥–æ–≤–∞–Ω–∏–µ:", equipmentData);
    setEquipment(equipmentData);
    setStep(4);
  };

  const goToStep = (targetStep) => {
    if (targetStep >= 1 && targetStep <= 4) {
      setStep(targetStep);
    }
  };

  return (
    <div className="min-h-screen bg-gray-100 p-6">
      <h1 className="text-2xl font-bold text-center text-blue-800 mb-6">
        üí° –†–∞—Å—á—ë—Ç –º–µ—Ä—ã —Å–ø—É—Å–∫–∞ —Ö–≤–æ—Å—Ç–æ–≤–∏–∫–∞
      </h1>

      {/* –®–∞–≥ 1: –í–≤–æ–¥ –ø–∞—Ä–∞–º–µ—Ç—Ä–æ–≤ —Å–∫–≤–∞–∂–∏–Ω—ã */}
      {step === 1 && (
        <WellParametersForm 
          onNext={handleWellDataSubmit} 
          initialData={projectData} 
        />
      )}

      {/* –®–∞–≥ 2: –ó–∞–≥—Ä—É–∑–∫–∞ —Ç—Ä—É–± –∏ –ø–∞—Ç—Ä—É–±–∫–æ–≤ */}
      {step === 2 && (
        <TubeUploader
          wellParams={projectData}
          onNext={handleTubeData}
          onBack={() => goToStep(1)}
        />
      )}

      {/* –®–∞–≥ 3: –ó–∞–≥—Ä—É–∑–∫–∞ –æ–±–æ—Ä—É–¥–æ–≤–∞–Ω–∏—è */}
      {step === 3 && (
        <EquipmentUploader
          onNext={handleEquipmentData}
          onBack={() => goToStep(2)}
          wellParams={projectData}
        />
      )}

      {/* –®–∞–≥ 4: –†–∞—Å—á–µ—Ç –º–µ—Ä—ã —Å–ø—É—Å–∫–∞ */}
      {step === 4 && (
        <CalculateMera
          tubes={tubes}
          patrubki={patrubki}
          equipment={equipment}
          wellParams={projectData}
          onBack={() => goToStep(3)}
        />
      )}

      {/* –û—Ç–ª–∞–¥–æ—á–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è - –º–æ–∂–Ω–æ —É–¥–∞–ª–∏—Ç—å –Ω–∞ –ø—Ä–æ–¥–∞–∫—à–µ–Ω–µ */}
      <div className="mt-8 text-xs text-gray-500 border-t pt-4">
        <details>
          <summary>–û—Ç–ª–∞–¥–æ—á–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è</summary>
          <div className="mt-2 p-2 bg-gray-100 rounded">
            <div>–¢–µ–∫—É—â–∏–π —à–∞–≥: {step}</div>
            <div>–ì–ª—É–±–∏–Ω–∞ —Å–∫–≤–∞–∂–∏–Ω—ã: {projectData.depth || "–ù–µ –∑–∞–¥–∞–Ω–∞"}</div>
            <div>–ì–ª—É–±–∏–Ω–∞ –±–∞—à–º–∞–∫–∞: {projectData.shoeDepth || "–ù–µ –∑–∞–¥–∞–Ω–∞"}</div>
            <div>–ì–ª—É–±–∏–Ω–∞ –ø–æ–¥–≤–µ—Å–∫–∏: {projectData.hangerDepth || "–ù–µ –∑–∞–¥–∞–Ω–∞"}</div>
            <div>–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ —Ç—Ä—É–±: {tubes?.length || 0}</div>
            <div>–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –ø–∞—Ç—Ä—É–±–∫–æ–≤: {patrubki?.length || 0}</div>
            <div>–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –æ–±–æ—Ä—É–¥–æ–≤–∞–Ω–∏—è: {equipment?.length || 0}</div>
            {equipment?.length > 0 && (
              <>
                <div>–ü–µ—Ä–≤—ã–π —ç–ª–µ–º–µ–Ω—Ç: {equipment[0]?.name || '–ù/–î'} (–∏–Ω—Ç: {equipment[0]?.interval || '–ù/–î'})</div>
                <div>–ü–æ—Å–ª–µ–¥–Ω–∏–π —ç–ª–µ–º–µ–Ω—Ç: {equipment[equipment.length-1]?.name || '–ù/–î'} (–∏–Ω—Ç: {equipment[equipment.length-1]?.interval || '–ù/–î'})</div>
              </>
            )}
          </div>
        </details>
      </div>
    </div>
  );
}

export default App;
