import { useState, useEffect } from "react";

function WellParametersForm({ onNext, initialData }) {
  const [wellParams, setWellParams] = useState({
    wellNumber: "6334",
    wellPad: "46",
    field: "–ï–º-–ï–≥–æ–≤—Å–∫–∏–π + –ü–∞–ª—å—è–Ω–æ–≤—Å–∫–∏–π –õ–£",
    runDate: "2025-03-12",
    depth: "3348",
    casingOD: "114.3",
    casingWeight: "",
    casingSteel: "P-110",
    casingID: "97.1",
    openHole: "155.6",
    volumePerMeter: "",
  });

  const [centralizer, setCentralizer] = useState({
    name: "",
    quantity: "",
    interval: "1/2",
  });

  useEffect(() => {
    if (initialData) {
      console.log("üìã –ó–∞–≥—Ä—É–∂–∞–µ–º —Å–æ—Ö—Ä–∞–Ω–µ–Ω–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ –≤ —Ñ–æ—Ä–º—É:", initialData);
      if (initialData.wellParams) {
        setWellParams(prev => ({
          ...prev,
          ...initialData.wellParams
        }));
      } else {
        setWellParams(prev => ({
          ...prev,
          depth: initialData.depth || prev.depth,
        }));
      }
      
      if (initialData.centralizer) {
        setCentralizer(initialData.centralizer);
      }
    }
  }, [initialData]);

  useEffect(() => {
    calculatePipeWeight();
  }, [wellParams.casingOD, wellParams.casingID]);

  const calculatePipeWeight = () => {
    const outerDiameter = parseFloat(wellParams.casingOD);
    const innerDiameter = parseFloat(wellParams.casingID);
    
    if (!isNaN(outerDiameter) && !isNaN(innerDiameter) && outerDiameter > innerDiameter) {
      const steelDensity = 7850; // –∫–≥/–º¬≥ - —Å—Ä–µ–¥–Ω—è—è –ø–ª–æ—Ç–Ω–æ—Å—Ç—å —Å—Ç–∞–ª–∏
      const outerRadius = outerDiameter / 2000; // –ø–µ—Ä–µ–≤–æ–¥ –≤ –º
      const innerRadius = innerDiameter / 2000; // –ø–µ—Ä–µ–≤–æ–¥ –≤ –º
      
      // –ü–ª–æ—â–∞–¥—å —Å–µ—á–µ–Ω–∏—è —Ç—Ä—É–±—ã (–º¬≤)
      const area = Math.PI * (outerRadius * outerRadius - innerRadius * innerRadius);
      
      // –í–µ—Å —Ç—Ä—É–±—ã (–∫–≥/–º)
      const weight = area * steelDensity;
      
      setWellParams(prev => ({
        ...prev,
        casingWeight: weight.toFixed(2)
      }));
    }
  };

  const handleParamChange = (e) => {
    const { name, value } = e.target;
    setWellParams((prev) => ({ ...prev, [name]: value }));
  };

  const handleCentralizerChange = (e) => {
    const { name, value } = e.target;
    setCentralizer((prev) => ({ ...prev, [name]: value }));
  };

  const handleClear = () => {
    setWellParams({
      wellNumber: "",
      wellPad: "",
      field: "",
      runDate: "",
      depth: "",
      casingOD: "",
      casingWeight: "",
      casingSteel: "",
      casingID: "",
      openHole: "",
      volumePerMeter: "",
    });
    setCentralizer({ name: "", quantity: "", interval: "1/2" });
  };

  const handleSubmit = (e) => {
    e.preventDefault();

    const { depth } = wellParams;
    const depthNum = parseFloat(depth);

    if (isNaN(depthNum)) {
      alert("‚ùå –ó–Ω–∞—á–µ–Ω–∏–µ –≥–ª—É–±–∏–Ω—ã —Å–∫–≤–∞–∂–∏–Ω—ã –¥–æ–ª–∂–Ω–æ –±—ã—Ç—å —á–∏—Å–ª–æ–≤—ã–º.");
      return;
    }

    onNext({ 
      wellParams, 
      centralizer,
      depth: depthNum,
    });
  };

  return (
    <form onSubmit={handleSubmit} className="bg-white shadow-md rounded p-6 w-full max-w-4xl mx-auto mt-10 space-y-6">
      <h2 className="text-xl font-bold text-blue-700">–û—Å–Ω–æ–≤–Ω—ã–µ –ø–∞—Ä–∞–º–µ—Ç—Ä—ã —Å–∫–≤–∞–∂–∏–Ω—ã</h2>

      <div className="grid grid-cols-2 gap-4">
        <div>
          <label className="block text-sm font-medium mb-1">–°–∫–≤–∞–∂–∏–Ω–∞</label>
          <input
            name="wellNumber"
            placeholder="–°–∫–≤–∞–∂–∏–Ω–∞"
            value={wellParams.wellNumber}
            onChange={handleParamChange}
            className="input"
          />
        </div>
        <div>
          <label className="block text-sm font-medium mb-1">–ö—É—Å—Ç</label>
          <input
            name="wellPad"
            placeholder="–ö—É—Å—Ç"
            value={wellParams.wellPad}
            onChange={handleParamChange}
            className="input"
          />
        </div>
        <div className="col-span-2">
          <label className="block text-sm font-medium mb-1">–ú–µ—Å—Ç–æ—Ä–æ–∂–¥–µ–Ω–∏–µ</label>
          <input
            name="field"
            placeholder="–ú–µ—Å—Ç–æ—Ä–æ–∂–¥–µ–Ω–∏–µ"
            value={wellParams.field}
            onChange={handleParamChange}
            className="input"
          />
        </div>
        <div>
          <label className="block text-sm font-medium mb-1">–î–∞—Ç–∞ —Å–ø—É—Å–∫–∞</label>
          <input
            name="runDate"
            type="date"
            placeholder="–î–∞—Ç–∞ —Å–ø—É—Å–∫–∞"
            value={wellParams.runDate}
            onChange={handleParamChange}
            className="input"
          />
        </div>
        <div>
          <label className="block text-sm font-medium mb-1">–ì–ª—É–±–∏–Ω–∞ —Å–∫–≤–∞–∂–∏–Ω—ã, –º</label>
          <input
            name="depth"
            placeholder="–ì–ª—É–±–∏–Ω–∞ —Å–∫–≤–∞–∂–∏–Ω—ã, –º"
            value={wellParams.depth}
            onChange={handleParamChange}
            className="input"
          />
        </div>
        <div>
          <label className="block text-sm font-medium mb-1">–û—Ç–∫—Ä—ã—Ç—ã–π —Å—Ç–≤–æ–ª (mm)</label>
          <input
            name="openHole"
            placeholder="–û—Ç–∫—Ä—ã—Ç—ã–π —Å—Ç–≤–æ–ª (mm)"
            value={wellParams.openHole}
            onChange={handleParamChange}
            className="input"
          />
        </div>
        <div>
          <label className="block text-sm font-medium mb-1">–ö–æ–ª–æ–Ω–Ω–∞ (mm)</label>
          <input
            name="casingOD"
            placeholder="–ö–æ–ª–æ–Ω–Ω–∞ (mm)"
            value={wellParams.casingOD}
            onChange={handleParamChange}
            className="input"
          />
        </div>
        <div>
          <label className="block text-sm font-medium mb-1">–í–Ω—É—Ç—Ä–µ–Ω–Ω–∏–π –¥–∏–∞–º–µ—Ç—Ä –∫–æ–ª–æ–Ω–Ω—ã (mm)</label>
          <input
            name="casingID"
            placeholder="–í–Ω—É—Ç—Ä–µ–Ω–Ω–∏–π –¥–∏–∞–º–µ—Ç—Ä –∫–æ–ª–æ–Ω–Ω—ã"
            value={wellParams.casingID}
            onChange={handleParamChange}
            className="input"
          />
        </div>
        <div>
          <label className="block text-sm font-medium mb-1">–í–µ—Å (kg/m)</label>
          <input
            name="casingWeight"
            placeholder="–í–µ—Å (kg/m)"
            value={wellParams.casingWeight}
            onChange={handleParamChange}
            className="input bg-gray-100"
            readOnly
          />
          <p className="text-xs text-gray-500 mt-1">–†–∞—Å—Å—á–∏—Ç—ã–≤–∞–µ—Ç—Å—è –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏</p>
        </div>
        <div>
          <label className="block text-sm font-medium mb-1">–°—Ç–∞–ª—å</label>
          <input
            name="casingSteel"
            placeholder="–°—Ç–∞–ª—å"
            value={wellParams.casingSteel}
            onChange={handleParamChange}
            className="input"
          />
        </div>
        <div>
          <label className="block text-sm font-medium mb-1">–£–¥–µ–ª—å–Ω—ã–π –æ–±—ä–µ–º (–º¬≥/–º)</label>
          <input
            name="volumePerMeter"
            placeholder="–£–¥–µ–ª—å–Ω—ã–π –æ–±—ä–µ–º (–º¬≥/–º)"
            value={wellParams.volumePerMeter}
            onChange={handleParamChange}
            className="input"
          />
        </div>
      </div>

      <h2 className="text-xl font-bold text-blue-700 mt-6">–ü–∞—Ä–∞–º–µ—Ç—Ä—ã —Ü–µ–Ω—Ç—Ä–∞—Ç–æ—Ä–æ–≤</h2>
      <div className="grid grid-cols-3 gap-4">
        <div>
          <label className="block text-sm font-medium mb-1">–ù–∞–∑–≤–∞–Ω–∏–µ</label>
          <input
            name="name"
            placeholder="–ù–∞–∑–≤–∞–Ω–∏–µ"
            value={centralizer.name}
            onChange={handleCentralizerChange}
            className="input"
          />
        </div>
        <div>
          <label className="block text-sm font-medium mb-1">–û–±—â–µ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ</label>
          <input
            name="quantity"
            placeholder="–û–±—â–µ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ"
            value={centralizer.quantity}
            onChange={handleCentralizerChange}
            className="input"
          />
        </div>
        <div>
          <label className="block text-sm font-medium mb-1">–ò–Ω—Ç–µ—Ä–≤–∞–ª —É—Å—Ç–∞–Ω–æ–≤–∫–∏</label>
          <select
            name="interval"
            value={centralizer.interval}
            onChange={handleCentralizerChange}
            className="input"
          >
            <option value="1/1">1/1</option>
            <option value="1/2">1/2</option>
            <option value="1/3">1/3</option>
            <option value="2/1">2/1</option>
          </select>
        </div>
      </div>

      <div className="flex justify-between mt-8">
        <button
          type="button"
          onClick={handleClear}
          className="bg-gray-200 px-6 py-2 rounded hover:bg-gray-300"
        >
          –û—á–∏—Å—Ç–∏—Ç—å
        </button>
        <button
          type="submit"
          className="bg-blue-600 text-white px-6 py-2 rounded hover:bg-blue-700"
        >
          –î–∞–ª–µ–µ
        </button>
      </div>
    </form>
  );
}

export default WellParametersForm;
